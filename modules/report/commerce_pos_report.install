<?php

/**
 * @file
 * commerce_pos_report.install
 */

/**
 * Implements hook_schema().
 */
function commerce_pos_report_schema() {
  $schema = array();

  $schema['commerce_pos_report_declared_data'] = array(
    'description' => 'The base table for POS declared amount information',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'register_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'amount' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'date' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'data' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
      'data_register' => array('register_id'),
      'data_amount' => array('amount'),
      'data_date' => array('date'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function commerce_pos_report_uninstall() {
  // Variable cleanup.
  variable_del('commerce_pos_report_end_of_day_hour');
  variable_del('commerce_pos_report_end_of_day_minute');
}

/**
 * Create commerce_pos_report_declared_data table.
 */
function commerce_pos_report_update_7001(&$sandbox) {
  db_create_table('commerce_pos_report_declared_data', array(
    'description' => 'The base table for POS declared amount information',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'location_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'amount' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'date' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'data' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
      'data_location' => array('location_id'),
      'data_amount' => array('amount'),
      'data_date' => array('date'),
    ),
  ));
}

/**
 * Change location_id to register_id.
 */
function commerce_pos_report_update_7201() {
  $spec = array(
    'description' => 'The register this entry is for.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  );

  // Create new field with index.
  if (!db_field_exists('commerce_pos_report_declared_data', 'register_id')) {
    db_add_field('commerce_pos_report_declared_data', 'register_id', $spec);
  }

  if (!db_index_exists('commerce_pos_report_declared_data', 'data_register')) {
    db_add_index('commerce_pos_report_declared_data', 'data_register', array('register_id'));
  }

  if (db_field_exists('commerce_pos_report_declared_data', 'location_id')) {
    // Check for existing data in the location_id column. If there is none, it's
    // safe to drop it now.
    $locations = db_select('commerce_pos_report_declared_data', 'rdd')
      ->condition('rdd.location_id', 0, '!=')
      ->countQuery()
      ->execute()
      ->fetchField();

    if (!$locations) {
      // Ensure old field and index is removed.
      if (db_index_exists('commerce_pos_report_declared_data', 'data_location')) {
        db_drop_index('commerce_pos_report_declared_data', 'data_location');
      }

      db_drop_field('commerce_pos_report_declared_data', 'location_id');
    }
  }

}
