<?php

/**
 * @file
 */

/**
 * Implements hook_theme().
 */
function commerce_pos_cash_input_theme($existing, $type, $theme, $path) {
  return array(
    'commerce_pos_cash_input_box' => array(
      'path' => $path . '/theme',
      'file' => 'commerce_pos_cash_input.theme.inc',
      'template' => 'commerce-pos-cash-input-box',
      'variables' => array(
        'currency_code' => '',
      ),
    ),
  );
}

/**
 * Implements hook_element_info_alter().
 */
function commerce_pos_cash_input_element_info_alter(&$type) {
  $form_elements = array('textfield');

  foreach ($form_elements as $element) {
    $type[$element]['#pre_render'][] = 'commerce_pos_cash_input_pre_render';
  }
}

/**
 * Attach cash input JS to elements as needed.
 */
function commerce_pos_cash_input_pre_render($element) {
  // Only preprocess items with #key_bindings set.
  if (isset($element['#commerce_pos_cash_input'])) {
    $element['#attached']['css'][] = drupal_get_path('module', 'commerce_pos_cash_input') . '/css/commerce_pos_cash_input.css';
    $element['#attached']['js'][] = drupal_get_path('module', 'commerce_pos_cash_input') . '/js/commerce_pos_cash_input.js';
    $element['#attached']['js'][] = array(
      'type' => 'setting',
      'data' => array(
        'commercePosCashInput' => array(
          'inputBox' => theme('commerce_pos_cash_input_box', array(
            'currency_code' => isset($element['#commerce_pos_cash_input']['currency_code']) ? $element['#commerce_pos_cash_input']['currency_code'] : commerce_default_currency(),
          )),
        ),
      ),
    );
    $element['#attributes']['class'][] = 'commerce-pos-cash-input';
  }

  return $element;
}
