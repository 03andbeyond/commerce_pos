<?php

/**
 * Class CommerceXlsImportTestCase.
 *
 */
class CommercePosTestCase extends CommerceBaseTestCase {
  protected $adminUser;
  protected $privilegedUser;
  protected $normalUser;

  /**
   * GetInfo().
   *
   * @{inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => 'Commerce POS Tests',
      'description' => 'Ensure Commerce POS functions properly',
      'group' => 'Commerce POS',
    );
  }

  /**
   * Setup().
   *
   * @{inheritdoc}
   */
  public function setUp() {

    parent::setUp(array('commerce_pos'));

    $this->adminUser = $this->drupalCreateUser(array(
      'administer commerce pos',
    ));

    $this->privilegedUser = $this->drupalCreateUser(array(
      'process commerce pos sales',
      'process commerce pos returns',
    ));

    $this->normalUser = $this->drupalCreateUser();
  }

  public function testCommercePosMenu() {
    $this->drupalLogin($this->privilegedUser);

    $this->drupalGet('admin/commerce/pos');
    $this->assertResponse('200', 'Privileged user was able to correctly access the main pos page');

    $this->drupalGet('admin/commerce/pos/sale');
    $this->assertResponse('200', 'Privileged user was able to correctly access the pos sale page');

    $this->drupalGet('admin/commerce/pos/payment');
    $this->assertResponse('200', 'Privileged user was able to correctly access the pos payment page');

    $this->drupalGet('admin/commerce/pos/return');
    $this->assertResponse('200', 'Privileged user was able to correctly access the pos return page');

    $this->drupalGet('admin/commerce/pos/return/payment');
    $this->assertResponse('200', 'Privileged user was able to correctly access the pos refund page');

    $this->drupalGet('admin/commerce/pos/login');
    $this->assertResponse('200', 'Privileged user was able to correctly access the pos login page');

    $this->drupalLogin($this->adminUser);

    $this->drupalGet('admin/commerce/config/pos');
    $this->assertResponse('200', 'Privileged user was able to correctly access the pos config page');

    $this->drupalGet('admin/commerce/config/pos/settings');
    $this->assertResponse('200', 'Privileged user was able to correctly access the pos config settings page');
  }

  /**
   * Test permissions.
   */
  public function testCommercePosPermissions() {
    $this->drupalLogin($this->privilegedUser);
    $this->drupalGet('admin/commerce/config/pos');
    $this->assertResponse('403', 'Privileged user was unable to access the pos config page');

    $this->drupalGet('admin/commerce/config/pos/settings');
    $this->assertResponse('403', 'Privileged user was unable to access the pos config settings page');

    $this->drupalLogin($this->normalUser);
    $this->drupalGet('admin/commerce/pos');
    $this->assertResponse('403', 'Unprivileged user was unable to access the main pos page');

    $this->drupalGet('admin/commerce/pos/sale');
    $this->assertResponse('403', 'Unprivileged user was unable to access the pos sale page');

    $this->drupalGet('admin/commerce/pos/payment');
    $this->assertResponse('403', 'Unprivileged user was unable to access the pos payment page');

    $this->drupalGet('admin/commerce/pos/return');
    $this->assertResponse('403', 'Unprivileged user was unable to access the pos return page');

    $this->drupalGet('admin/commerce/pos/return/payment');
    $this->assertResponse('403', 'Unprivileged user was unable to access the pos refund page');

    $this->drupalGet('admin/commerce/pos/login');
    $this->assertResponse('403', 'Unprivileged user was unable to access the pos login page');

    $this->drupalGet('admin/commerce/config/pos');
    $this->assertResponse('403', 'Unprivileged user was unable to access the pos config page');

    $this->drupalGet('admin/commerce/config/pos/settings');
    $this->assertResponse('403', 'Unprivileged user was unable to access the pos config settings page');
  }

  public function testCommercePosAddProduct() {
    $sku = 'PROD-01';
    $product_name = 'Product One';
    $this->product = $this->createDummyProduct($sku, $product_name);

    $this->drupalLogin($this->privilegedUser);
    $this->drupalGet('admin/commerce/pos');
  }

}